version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR....
      # Check AWS CLI version
      - aws --version
      # Log in to Amazon ECR
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 056491973129.dkr.ecr.us-east-1.amazonaws.com
      # Define repository URI and image tag
      - 056491973129.dkr.ecr.us-east-1.amazonaws.com/awsdevopsecr
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
  build:
    commands:
      - echo Build started on date
      - echo Building the JAR file...
      # Build the Java project using Maven
      - mvn clean install
      - echo Building the Docker image...
      # Build and tag Docker image
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on date
      - echo Pushing the Docker image to ECR...
      # Push Docker images to ECR
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      # Define container name and create imagedefinitions.json for ECS
      - DOCKER_CONTAINER_NAME=spring-demo-ecr
      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo $DOCKER_CONTAINER_NAME
      - echo Displaying imagedefinitions.json content
      - cat imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
    - target/springboot-aws-deploy.jar
